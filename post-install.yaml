---
- name: openShift configure after install
  hosts: bastion
  vars_files:
    - vars/env.yaml
    - vars/node.yaml
    - vars/nfs.yaml
    - vars/nfs-provisioner.yaml
    - vars/ignition.yaml
    - vars/openshift.yaml
    - vars/infra.yaml
    - vars/openmaru.yaml
    - vars/preinstall-operator.yaml


  pre_tasks:
    - name: openshift certificate config
      block:
        - name: check openshift certificate file
          shell: ls -al /etc/pki/ca-trust/source/anchors/openshift.crt

      rescue:            
        - name:
          shell: /usr/local/bin/oc exec -it $(/usr/local/bin/oc get pods -n openshift-authentication | grep oauth | awk '{print $1}' | head -1) -n openshift-authentication -- cat /run/secrets/kubernetes.io/serviceaccount/ca.crt
          register: openshift_crt
    
        - name: write openshift certificate
          lineinfile:
            path: /etc/pki/ca-trust/source/anchors/openshift.crt
            create: yes
            state: present
            line: "{{ openshift_crt.stdout }}"
        
        - name: update ca trust
          shell: update-ca-trust

    - name: openshift cluster login
      block: 
        - name: get openshift temporary admin password
          shell: "cat {{ openshift_config_directory  }}/install_dir/auth/kubeadmin-password"
          register: kubeadminPassword
    
        - name: openshift login temporary admin
          shell: "/usr/local/bin/oc login -u kubeadmin -p {{ kubeadminPassword.stdout }} --insecure-skip-tls-verify=true"

      rescue:
        - name: openshift login htpasswd account
          shell: "/usr/local/bin/oc login -u {{ openshift_admin[0]['name'] }} -p {{ openshift_admin[0]['password'] }} --insecure-skip-tls-verify=true"

      always:
        - name: get oc whoami
          shell: "/usr/local/bin/oc whoami"
          register: whoami

        - name: print whoami
          debug:
            msg: "{{ whoami.stdout}}"

  roles:
    - openshift
    - nfs-provisioner
    - preinstall-operator
    - openmaru
    - infra

  post_tasks:
    - name: delete temporary account
      shell: /usr/local/bin/oc delete secret kubeadmin -n kube-system
      ignore_errors: yes

    - name: oc logout
      shell: /usr/local/bin/oc logout

